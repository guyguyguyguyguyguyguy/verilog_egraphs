(datatype Expr
	(Var String) 
    (Bool bool)
    (Not Expr)
    (And Expr Expr)
    (Or Expr Expr)
    (Eq Expr Expr))

(relation Root (Expr))
(relation True (Expr))
(relation False (Expr))

(Root ((Var "bvult") (Var "MD_LAST") (Var "MD_FINISH")) )
(Root ((Var "bvule") (Var "MD_COMP") ((Var "bvneg") (Var "MD_COMP"))) )
(Root ((Var "bvule") (Var "MD_ABS_B") ((Var "bvmul") (Var "MD_ABS_B") (Var "MD_ABS_B"))) )
(Root (Eq (Var "MD_LAST") ((Var "bvneg") (Var "MD_LAST"))) )
(Root (Eq (Var "MD_ABS_A") ((Var "bvmul") (Var "MD_ABS_A") (Var "MD_ABS_A"))) )
(Root ((Var "bvult") (Var "MD_ABS_A") (Var "MD_CHANGE_SIGN")) )
(Root (Eq (Var "rem_change_sign") (Var "sign_a")) )
(Root ((Var "bvult") (Var "MD_ABS_B") (Var "MD_CHANGE_SIGN")) )
(Root ((Var "bvult") (Var "MD_CHANGE_SIGN") (Var "MD_FINISH")) )
(Root ((Var "bvule") (Var "MD_OP_MULH") ((Var "bvneg") (Var "MD_OP_MULH"))) )
(Root ((Var "bvult") (Var "MD_IDLE") (Var "MD_LAST")) )
(Root (Eq (Var "MD_OP_DIV") ((Var "bvneg") (Var "MD_OP_DIV"))) )
(Root ((Var "bvule") (Var "MD_IDLE") (Var "md_state_q")) )
(Root ((Var "bvule") ((Var "bvmul") (Var "b_0") (Var "b_0")) (Var "b_0")) )
(Root ((Var "bvult") (Var "MD_IDLE") (Var "MD_COMP")) )
(Root ((Var "bvult") (Var "MD_IDLE") (Var "MD_ABS_A")) )
(Root ((Var "bvult") (Var "MD_COMP") (Var "MD_LAST")) )
(Root (Eq (Var "MD_IDLE") ((Var "bvneg") (Var "MD_IDLE"))) )
(Root ((Var "bvult") (Var "MD_ABS_B") (Var "MD_FINISH")) )
(Root (Eq (Var "MD_OP_MULL") ((Var "bvneg") (Var "MD_OP_MULL"))) )
(Root ((Var "bvule") ((Var "bvmul") (Var "MD_COMP") (Var "MD_COMP")) (Var "MD_COMP")) )
(Root ((Var "bvult") (Var "MD_ABS_A") (Var "MD_FINISH")) )
(Root ((Var "bvule") (Var "MD_OP_MULL") (Var "MD_OP_MULH")) )

(rule
 ((Not ?a))
 ((False ?a)))

(rule
  ((= ?c (And ?a ?b))
   (False ?a))
  ((False ?c)))

(rule 
 ((= ?c (Not ?a))
  (False ?a))
 ((True ?c)))

(rule
 ((Root (Not ?a)))
 ((False ?a)))

(rule
 ((True (Not ?a)))
 ((False ?a)))

(rule 
 ((True (And ?a ?b)))
 ((True ?a) (True ?b)))

(rule
 ((Root ?a))
 ((True ?a)))

(rule
 ((Or ?a ?b)
  (False ?a))
 ((True ?b)))

(rule
 ((Eq ?a ?b)
  (False ?a))
 ((False ?b)))

(rule
 ((Eq ?a ?b)
  (True ?a))
 ((True ?b)))

(rule
 ((True (Eq ?a (And ?a ?b)))
  (True ?a))
 ((True ?b)))

(rule
 ((= ?c (Eq ?a (Or ?a ?b)))
  (True ?c))
 ((union ?a ?c)))

(rule
 ((False ?a)
  (= ?c (And ?a ?b)))
 ((False ?c)))

(rule
 ((True ?a)
  (= ?c (Or ?a ?b)))
 ((True ?c)))

(rule
 ((True ?a)
  (= ?c (Not ?a)))
 ((False ?c)))

(rule
 ((False ?a)
  (= ?c (Not ?a)))
 ((True ?c)))

(rule 
 ((= ?c (And ?a ?b))
  (Root ?c)
  (True ?a))
 ((union ?c ?b)))

(rule
 ((= ?c (Or ?a ?b))
  (Root ?c)
  (False ?a))
 ((union ?c ?b)))

(rule
 ((= ?c (Eq ?a ?b))
  (Root ?c)
  (True ?a))
 ((union ?c ?b)))

(rewrite (Or ?a ?b) (Or ?b ?a))
(rewrite (And ?a ?b) (And ?b ?a))
(rewrite (Eq ?a ?b) (Eq ?b ?a))

;(print "Sizes before running:")
(print-size Root)
(print-size True)
(print-size False)

(run 20)

(print-size Root)
(print-size True)
(print-size False)
