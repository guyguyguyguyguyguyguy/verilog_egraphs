(datatype Expr
	(Var String) 
    (Bool bool)
    (Not Expr)
    (And Expr Expr)
    (Or Expr Expr)
    (Eq Expr Expr))

(relation Root (Expr))
(relation True (Expr))
(relation False (Expr))

(Root (Eq (Var "G33") (Var "G55")) )
(Root (Not (Var "G100")) )
(Root (Var "G77") )
(Root (Or (Var "G11") (Eq (Var "G36") (Var "G83"))) )
(Root (Not (Eq (Var "G110") (Var "G22"))) )
(Root (Eq (Var "G10") (Var "G132")) )
(Root (Eq (Var "G105") (Var "G51")) )
(Root (Eq (Var "G104") (Var "G108")) )
(Root (Eq (Var "G40") (Var "G54")) )
(Root (Not (And (Var "G128") (Var "G56"))) )
(Root (Eq (Var "G104") (Var "G110")) )
(Root (Or (Var "G97") (Var "II235")) )
(Root (Or (Var "CK") (Var "G25")) )
(Root (Or (Var "G0") (Var "G28")) )
(Root (Not (Eq (Var "G12") (Var "G64"))) )
(Root (Not (Var "G115")) )
(Root (Eq (Var "G55") (And (Var "G55") (Var "G73"))) )
(Root (Eq (Var "G110") (Var "G41")) )
(Root (Eq (Var "G105") (Var "G33")) )
(Root (Not (Eq (Var "G61") (Var "G84"))) )
(Root (Or (Var "G67") (Var "II155")) )
(Root (Not (Var "G39")) )
(Root (Not (Var "G30")) )
(Root (Eq (Var "G26") (Var "G27")) )
(Root (Not (And (Var "G122") (Var "G133"))) )
(Root (Eq (Var "G12") (Var "G23")) )
(Root (Eq (Var "G17") (Var "G35")) )
(Root (Eq (Var "G93") (Var "G99")) )
(Root (Or (Var "G101") (Var "G59")) )
(Root (Or (Var "G108") (Var "G19")) )
(Root (Eq (Var "G46") (Var "G99")) )
(Root (Eq (Var "G69") (Var "G83")) )
(Root (Eq (Var "G110") (Var "G87")) )
(Root (Eq (Var "G91") (Var "II158")) )
(Root (Eq (Var "G76") (Var "G93")) )
(Root (Or (Var "G19") (Var "II235")) )
(Root (Or (Var "G101") (Not (Var "G11"))) )
(Root (Eq (Var "G15") (Var "G17")) )
(Root (Eq (Var "G11") (Var "G12")) )
(Root (Eq (Var "G37") (Var "G60")) )
(Root (Var "G65") )
(Root (Or (Var "G10") (Eq (Var "G38") (Var "G70"))) )
(Root (Eq (Var "G103") (Var "II158")) )
(Root (Eq (Var "G10") (Var "G111")) )
(Root (Or (Var "G101") (Var "G87")) )
(Root (Eq (Var "G50") (Var "G90")) )
(Root (Eq (Var "G60") (Var "G92")) )
(Root (Eq (Var "G110") (Eq (Var "G79") (Var "G92"))) )
(Root (Not (Eq (Var "G15") (Var "G41"))) )
(Root (Not (Eq (Var "G114") (Var "G118"))) )
(Root (Eq (Var "G14") (Var "G17")) )
(Root (Eq (Var "G68") (Var "G79")) )
(Root (Eq (Var "G127") (Var "G45")) )
(Root (Or (Var "G110") (Var "G97")) )
(Root (Eq (Var "G10") (Var "G17")) )
(Root (Eq (Var "G119") (And (Var "G119") (Var "II229"))) )
(Root (Eq (Var "G124") (Var "G2")) )
(Root (Not (Eq (Var "G55") (Var "G80"))) )
(Root (Eq (Var "G41") (Var "G87")) )
(Root (Not (And (Var "G34") (Var "G46"))) )
(Root (Not (Eq (Var "G110") (Var "G117"))) )
(Root (Eq (Var "G104") (Var "II238")) )
(Root (Not (Var "G48")) )
(Root (Not (Var "G94")) )
(Root (Eq (Var "G109") (Var "G87")) )
(Root (Not (And (Var "G133") (Var "G24"))) )
(Root (Or (Var "CK") (Var "G69")) )
(Root (Or (Var "G42") (Var "G43")) )
(Root (Eq (Var "G76") (Var "G89")) )
(Root (Eq (Var "G12") (Var "G13")) )
(Root (Eq (Var "G111") (Var "G23")) )
(Root (Eq (Var "G13") (Var "G35")) )
(Root (Eq (Var "G12") (Var "G132")) )
(Root (Or (Var "G106") (Eq (Var "G37") (Var "G70"))) )
(Root (Not (Var "G88")) )
(Root (Or (Var "G108") (Var "G35")) )
(Root (Eq (Var "G15") (Var "G67")) )
(Root (Or (Var "G109") (Var "G66")) )
(Root (Not (Eq (Var "G15") (Var "G78"))) )
(Root (Eq (Var "G12") (And (Var "G12") (Var "G79"))) )
(Root (Not (And (Var "G12") (Var "G125"))) )
(Root (Not (And (Var "G29") (Var "G66"))) )
(Root (Eq (Var "G51") (Var "G91")) )
(Root (Eq (Var "G13") (Var "G18")) )
(Root (Eq (Var "G128") (And (Var "G128") (Var "II213"))) )
(Root (Not (Var "G107")) )
(Root (Or (Var "G103") (Not (Var "G128"))) )
(Root (Eq (Var "G106") (Var "G35")) )
(Root (Eq (Var "G25") (Var "G83")) )
(Root (Not (Var "G113")) )
(Root (Eq (Var "G129") (Var "G56")) )
(Root (Eq (Var "G10") (Var "G21")) )
(Root (Eq (Var "G36") (Var "G59")) )
(Root (Eq (Var "G108") (Eq (Var "G45") (Var "G73"))) )
(Root (Eq (Var "G76") (Var "II210")) )
(Root (Not (Var "G62")) )
(Root (Eq (Var "G117") (Var "G16")) )
(Root (Eq (Var "G41") (Var "G64")) )
(Root (Not (Eq (Var "G11") (Var "G114"))) )
(Root (Eq (Var "G70") (Var "G73")) )
(Root (Eq (Var "G16") (Var "G67")) )
(Root (Or (Var "G110") (Var "G25")) )
(Root (Var "G52") )
(Root (Eq (Var "G36") (Var "II210")) )
(Root (Or (Var "G118") (Eq (Var "G68") (Var "G99"))) )
(Root (Eq (Var "G29") (And (Var "G29") (Var "G78"))) )
(Root (Eq (Var "G36") (Var "G51")) )
(Root (Not (Var "G95")) )
(Root (Or (Var "G28") (Not (Var "G29"))) )
(Root (Or (Var "G108") (Not (Var "G121"))) )
(Root (Eq (Var "G40") (Var "G96")) )
(Root (Eq (Var "G37") (Var "G50")) )
(Root (Or (Var "G109") (Not (Var "G46"))) )
(Root (Not (And (Var "G15") (Var "G27"))) )
(Root (Eq (Var "G109") (Var "II238")) )
(Root (Or (Var "G112") (Var "II155")) )
(Root (Eq (Var "G103") (Var "G37")) )
(Root (Not (Var "G57")) )
(Root (Not (And (Var "G21") (Var "G76"))) )
(Root (Not (And (Var "G55") (Var "G74"))) )
(Root (Eq (Var "G33") (Var "G54")) )
(Root (Or (Var "G15") (Eq (Var "G69") (Var "G82"))) )
(Root (Eq (Var "G10") (Var "G117")) )
(Root (Or (Var "G73") (Not (Var "G76"))) )
(Root (Not (And (Var "G129") (Var "G93"))) )
(Root (Not (And (Var "G102") (Var "G127"))) )
(Root (Eq (Var "G38") (Var "G42")) )
(Root (Eq (Var "G42") (Var "G89")) )
(Root (Or (Var "G32") (Not (Var "G61"))) )
(Root (Eq (Var "G118") (Var "G14")) )
(Root (Eq (Var "G118") (Var "G13")) )
(Root (Not (Eq (Var "G106") (Var "G114"))) )
(Root (Not (Var "G44")) )
(Root (Eq (Var "G111") (Var "G18")) )
(Root (Or (Var "G109") (Not (Var "G26"))) )
(Root (Eq (Var "G93") (Var "G98")) )
(Root (Eq (Var "G38") (Var "G60")) )
(Root (Or (Var "G101") (Not (Var "G117"))) )
(Root (Not (And (Var "G21") (Var "II210"))) )
(Root (Or (Var "G18") (Not (Var "G56"))) )
(Root (Not (Eq (Var "G14") (Var "II235"))) )
(Root (Or (Var "G101") (Not (Var "G12"))) )
(Root (Eq (Var "G26") (And (Var "G26") (Var "G85"))) )
(Root (Or (Var "G18") (Var "II213")) )
(Root (Eq (Var "G103") (Var "II210")) )
(Root (Not (And (Var "G23") (Var "G27"))) )
(Root (Or (Var "G114") (Var "G85")) )
(Root (Eq (Var "G24") (Var "G76")) )
(Root (Or (Var "G109") (Not (Var "G37"))) )
(Root (Not (And (Var "G14") (Var "G33"))) )
(Root (Eq (Var "G38") (Var "G96")) )
(Root (Eq (Var "G11") (Var "G16")) )
(Root (Or (Var "G10") (Var "G87")) )
(Root (Not (And (Var "G129") (Var "G33"))) )
(Root (Not (Eq (Var "G37") (Var "G47"))) )
(Root (Or (Var "G109") (Var "G68")) )
(Root (Not (And (Var "G15") (Var "G37"))) )
(Root (Eq (Var "G105") (Var "G46")) )
(Root (Eq (Var "G60") (Var "G98")) )
(Root (Not (Var "G86")) )
(Root (Eq (Var "G121") (Var "G37")) )
(Root (Eq (Var "G10") (Var "G20")) )
(Root (Eq (Var "G15") (Var "G20")) )
(Root (Eq (Var "G118") (Var "G20")) )
(Root (Or (Var "G25") (Not (Var "G55"))) )
(Root (Eq (Var "G114") (Var "II213")) )
(Root (Eq (Var "G108") (Var "II155")) )
(Root (Or (Var "G112") (Var "G37")) )
(Root (Eq (Var "G68") (Var "G70")) )
(Root (Eq (Var "G42") (Var "G60")) )
(Root (Eq (Var "G81") (Var "G97")) )
(Root (Or (Var "G10") (Var "G64")) )
(Root (Eq (Var "G117") (Var "G18")) )
(Root (Not (And (Var "G133") (Var "G38"))) )
(Root (Not (And (Var "G123") (Var "G55"))) )
(Root (Eq (Var "G109") (Var "II213")) )
(Root (Eq (Var "G111") (Var "G16")) )
(Root (Var "G116") )
(Root (Var "G71") )
(Root (Not (Eq (Var "G47") (Var "G96"))) )
(Root (Not (Var "G75")) )
(Root (Or (Var "G109") (Var "G16")) )
(Root (Eq (Var "G105") (Var "G82")) )
(Root (Eq (Var "G40") (Var "G76")) )
(Root (Eq (Var "G26") (And (Var "G26") (Var "II235"))) )
(Root (Or (Var "G110") (Var "G68")) )
(Root (Eq (Var "G24") (Var "G82")) )
(Root (Eq (Var "G117") (And (Var "G117") (Var "G43"))) )
(Root (Eq (Var "G33") (Var "G49")) )
(Root (Not (Var "G31")) )
(Root (Eq (Var "G24") (And (Var "G24") (Var "G25"))) )
(Root (Eq (Var "G72") (Var "G79")) )

(rule
 ((Not ?a))
 ((False ?a)))

(rule
  ((= ?c (And ?a ?b))
   (False ?a))
  ((False ?c)))

(rule 
 ((= ?c (Not ?a))
  (False ?a))
 ((True ?c)))

(rule
 ((Root (Not ?a)))
 ((False ?a)))

(rule
 ((True (Not ?a)))
 ((False ?a)))

(rule 
 ((True (And ?a ?b)))
 ((True ?a) (True ?b)))

(rule
 ((Root ?a))
 ((True ?a)))

(rule
 ((Or ?a ?b)
  (False ?a))
 ((True ?b)))

(rule
 ((Eq ?a ?b)
  (False ?a))
 ((False ?b)))

(rule
 ((Eq ?a ?b)
  (True ?a))
 ((True ?b)))

(rule
 ((True (Eq ?a (And ?a ?b)))
  (True ?a))
 ((True ?b)))

(rule
 ((= ?c (Eq ?a (Or ?a ?b)))
  (True ?c))
 ((union ?a ?c)))

(rule
 ((False ?a)
  (= ?c (And ?a ?b)))
 ((False ?c)))

(rule
 ((True ?a)
  (= ?c (Or ?a ?b)))
 ((True ?c)))

(rule
 ((True ?a)
  (= ?c (Not ?a)))
 ((False ?c)))

(rule
 ((False ?a)
  (= ?c (Not ?a)))
 ((True ?c)))

(rule 
 ((= ?c (And ?a ?b))
  (Root ?c)
  (True ?a))
 ((union ?c ?b)))

(rule
 ((= ?c (Or ?a ?b))
  (Root ?c)
  (False ?a))
 ((union ?c ?b)))

(rule
 ((= ?c (Eq ?a ?b))
  (Root ?c)
  (True ?a))
 ((union ?c ?b)))

(rewrite (Or ?a ?b) (Or ?b ?a))
(rewrite (And ?a ?b) (And ?b ?a))
(rewrite (Eq ?a ?b) (Eq ?b ?a))

;(print "Sizes before running:")
(print-size Root)
(print-size True)
(print-size False)

(run 20)

(print-size Root)
(print-size True)
(print-size False)
