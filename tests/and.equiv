((define-fun f ((x Bool) (y Bool)) Bool (and x y)))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= _let_1 (or (and x y) (not _let_1))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and _let_1 (or (and x y) (not _let_1))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= (not _let_1) (and _let_1 (not (and x y)))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (= y (or _let_1 (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or _let_1 (= y (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or _let_1 (= x (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= x (= y (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (and (or x (not y)) (= x (or (and x y) (not (or x y)))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (= y (or _let_1 (not (or x y))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= _let_1 (and (or x (not y)) (or (and x y) (not _let_1)))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= _let_1 (and (= x _let_2) (or _let_2 (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (let ((_let_2 (or x y))) (or _let_1 (= (not _let_2) (and _let_2 (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and (or x (not y)) (= _let_1 (or (and x y) (not _let_1)))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (and (= x _let_2) (= _let_1 (or _let_2 (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (not (= _let_1 (or (and x (not y)) (and _let_1 (not (and x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (not (= _let_1 (or (and y (not x)) (and _let_1 (not (and x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= x (= y (and _let_1 (= x (= y (or (and x y) (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= x (= y (or (and x (not y)) (= x (or (and x y) (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= x (= y (or (and y (not x)) (= y (or (and x y) (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= x (= _let_2 (and _let_1 (= y (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or _let_1 (= (and y (not x)) (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (and (= x _let_1) (= x (= y (or _let_1 (not (or x y))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= y (= _let_2 (and _let_1 (= x (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or _let_1 (= (and x (not y)) (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= y (and (or x (not y)) (= x (= y (or (and x y) (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and (or x (not y)) (= (not _let_1) (and _let_1 (not (and x y))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (let ((_let_2 (or x y))) (and (= x _let_1) (= (not _let_2) (and _let_2 (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= x (= _let_1 (and (= x _let_2) (= x (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= x (= _let_1 (or (and y (not x)) (= x (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= x (or _let_2 (not (and _let_1 (= y (or _let_2 (not _let_1)))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or _let_1 (= y (or (and x (not y)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or _let_1 (= y (or (and y (not x)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (= _let_1 (and (or x (not y)) (= y (or _let_1 (not (or x y))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (= _let_1 (or (and x (not y)) (= y (or _let_1 (not (or x y))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or _let_1 (and (= x _let_1) (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (let ((_let_2 (or x y))) (= x (or (not _let_2) (= y (or _let_1 (and _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= x (or (not _let_1) (= (and y (not x)) (and _let_1 (not (and x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= x (and (= x _let_2) (= x (= _let_1 (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= x (and (= x _let_2) (= x (and _let_1 (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (and (= x _let_1) (= y (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (and (= x _let_1) (or _let_1 (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (and (= x _let_1) (= (and y (not x)) (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= x (or (and y (not x)) (= x (= _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= x (or (and y (not x)) (= x (and _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or (and y (not x)) (= y (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= x (or (and y (not x)) (and (or x (not y)) (or (and x y) (not (or x y))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= x (or (and y (not x)) (and (= x _let_1) (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (= y (or _let_2 (not (and _let_1 (= x (or _let_2 (not _let_1)))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or _let_1 (= x (or (and x (not y)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or _let_1 (= x (or (and y (not x)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or _let_1 (and (or x (not y)) (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (let ((_let_2 (or x y))) (= y (or (not _let_2) (= x (or _let_1 (and _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= y (or (not _let_1) (= (and x (not y)) (and _let_1 (not (and x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (and (or x (not y)) (= x (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= y (and (or x (not y)) (= y (= _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= y (and (or x (not y)) (= y (and _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (and (or x (not y)) (or _let_1 (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (not y))) (= y (and (or x _let_1) (= (and x _let_1) (and (or x y) (not (and x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or (and x (not y)) (= x (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= y (or (and x (not y)) (= y (= _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= y (or (and x (not y)) (= y (and _let_1 (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (not y))) (= y (or (and x _let_1) (and (or x _let_1) (or (and x y) (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= y (or (and x (not y)) (and (= x _let_1) (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (and _let_1 (= x (and (= x _let_2) (= x (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and _let_1 (= x (or (and y (not x)) (= x (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and _let_1 (= y (and (or x (not y)) (= y (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (and _let_1 (= y (or (and x (not y)) (= y (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (or _let_2 (not (= x (and _let_1 (= y (or _let_2 (not _let_1)))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (or _let_2 (not (= y (and _let_1 (= x (or _let_2 (not _let_1)))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (let ((_let_2 (and x y))) (or _let_2 (not (= _let_2 (and _let_1 (or _let_2 (not _let_1))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= x (= y (or (and x (not y)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= x (= y (or (and y (not x)) (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= x (and (= x _let_1) (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= x (or (and y (not x)) (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= y (and (or x (not y)) (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (= y (or (and x (not y)) (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (and (or x (not y)) (= x (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= _let_1 (or (and x (not y)) (= x (= y (or _let_1 (not (or x y))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (or _let_1 (and (= x _let_1) (= x (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= _let_1 (or (and y (not x)) (= x (= y (or _let_1 (not (or x y))))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (= x (= y (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (= x (or _let_1 (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (= x (and (= x _let_1) (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (= y (or _let_1 (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (or _let_1 (= x (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (and (= x _let_1) (= x (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (or x (not y)) (and (= x _let_1) (= y (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (and (or x (not y)) (or (and y (not x)) (= x (or (and x y) (not (or x y))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= (and x (not y)) (not (and _let_1 (= y (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (= (and x (not y)) (and (= x _let_1) (= y (and (or x y) (not _let_1))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= (and x (not y)) (or (and y (not x)) (= y (and (or x y) (not (and x y))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (= x (= y (or _let_1 (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (= x (or _let_1 (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (= y (or _let_1 (= x (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (= y (and (or x (not y)) (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (or _let_1 (= x (= y (and (or x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (and x y))) (and (= x _let_1) (or (and x (not y)) (= y (or _let_1 (not (or x y)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (let ((_let_1 (or x y))) (= (and y (not x)) (not (and _let_1 (= x (or (and x y) (not _let_1)))))))))
((define-fun f ((x Bool) (y Bool)) Bool (= (and y (not x)) (and (or x (not y)) (= x (and (or x y) (not (and x y))))))))